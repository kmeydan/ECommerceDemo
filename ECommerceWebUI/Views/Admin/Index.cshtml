@using ECommerceWebUI.Models.ViewModels.AdminViewModels.ViewModel;
@model AdminIndexViewModel
@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
	<!-- Content Header (Page header) -->
	<div class="content-header">
		<div class="container-fluid">
			<div class="row mb-2">
				<div class="col-sm-6">
					<h1 class="m-0">Dashboard</h1>
				</div>
			</div><!-- /.row -->
		</div><!-- /.container-fluid -->
	</div>
	<!-- /.content-header -->
	<!-- Main content -->
	<section class="content">
		<div class="container-fluid">
			<!-- Small boxes (Stat box) -->
			<div class="row">
				<div class="col-lg-3 col-6">
					<!-- small box -->
					<div class="small-box bg-info">
						<div class="inner">
							<h3>@Model.OrderCount</h3>

							<p>Yeni Siparişler</p>
						</div>
						<div class="icon">
							<i class="ion ion-bag"></i>
						</div>
						<a asp-action="OrderList" asp-controller="Admin" class="small-box-footer">Tümünü Gör <i class="fas fa-arrow-circle-right"></i></a>
					</div>
				</div>
				<!-- ./col -->
				<div class="col-lg-3 col-6">
					<!-- small box -->
					<div class="small-box bg-success">
						<div class="inner">
							<h3>@Model.ProductsCount</h3>

							<p>Ürün Sayısı</p>
						</div>
						<div class="icon">
							<i class="ion ion-stats-bars"></i>
						</div>
						<a asp-action="ProductList" asp-controller="Admin" class="small-box-footer">Tümünü Gör <i class="fas fa-arrow-circle-right"></i></a>
					</div>
				</div>
				<!-- ./col -->
				<div class="col-lg-3 col-6">
					<!-- small box -->
					<div class="small-box bg-warning">
						<div class="inner">
							<h3>@Model.CustomerCount</h3>

							<p>Kullanıcılar</p>
						</div>
						<div class="icon">
							<i class="ion ion-person-add"></i>
						</div>
						<a asp-action="CustomerList" asp-controller="Admin" class="small-box-footer">Tümünü Gör <i class="fas fa-arrow-circle-right"></i></a>
					</div>
				</div>
				<!-- ./col -->
				<div class="col-lg-3 col-6">
					<!-- small box -->
					<div class="small-box bg-danger">
						<div class="inner">
							<h3>@Model.OrderAll</h3>

							<p>Tüm Siparişler</p>
						</div>
						<div class="icon">
							<i class="ion ion-pie-graph"></i>
						</div>
						<a href="#" class="small-box-footer">Tümünü Gör <i class="fas fa-arrow-circle-right"></i></a>
					</div>
				</div>
				<!-- ./col -->
			</div>
			<!-- /.row -->
			<!-- Main row -->
			<div class="row">
				<div class="col-12">
					<!-- interactive chart -->
					<div class="card card-primary card-outline">
						<div class="card-header">
							<h3 class="card-title">
								<i class="far fa-chart-bar"></i>
								Anlık Site Trafiği
							</h3>
						</div>
						<div class="card-body">
							<div id="interactive" style="height: 300px;"></div>
						</div>
						<!-- /.card-body-->
					</div>
					<!-- /.card -->

				</div>
				<!-- /.col -->
			</div>

			<!-- /.row -->
			<div class="row">
				<!-- Left col -->
				<div class="col-lg-6">
					<!-- AREA CHART -->
					<div class="card card-primary">
						<div class="card-header">
							<h3 class="card-title">Siparişler</h3>
							<div class="card-tools">
								<button type="button" class="btn btn-tool" data-card-widget="collapse">
									<i class="fas fa-minus"></i>
								</button>
								<button type="button" class="btn btn-tool" data-card-widget="remove">
									<i class="fas fa-times"></i>
								</button>
							</div>
						</div>
						<div class="card-body">
							<div class="chart">
								<canvas id="areaChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
							</div>
						</div>
						<!-- /.card-body -->
					</div>
					<!-- /.card -->
				</div>
				<div class="col-lg-6 ">
					<!-- AREA CHART -->
					<div class="card card-success">
						<div class="card-header">
							<h3 class="card-title">Yeni Müşteriler</h3>

							<div class="card-tools">
								<button type="button" class="btn btn-tool" data-card-widget="collapse">
									<i class="fas fa-minus"></i>
								</button>
								<button type="button" class="btn btn-tool" data-card-widget="remove">
									<i class="fas fa-times"></i>
								</button>
							</div>
						</div>
						<div class="card-body">
							<div class="chart">
								<canvas id="areaChartCustomer" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
							</div>
						</div>
						<!-- /.card-body -->
					</div>
					<!-- /.card -->
				</div>
				<!-- right col -->
			</div>
			<!-- /.row (main row) -->
			<!--/.row-->
			<div class="row">
				<div class="col-md-7">
					<div class="card">
						<div class="card-header">
							<h3 class="card-title"><i class="fa fa-shopping-cart"></i> Son Siparişler</h3>

							<div class="card-tools">
								<button type="button" class="btn btn-tool" data-card-widget="collapse">
									<i class="fas fa-minus"></i>
								</button>
								<button type="button" class="btn btn-tool" data-card-widget="remove">
									<i class="fas fa-times"></i>
								</button>
							</div>
						</div>
						<!-- /.card-header -->
						<div class="card-body p-0">
							<table class="table table-striped">
								<thead>
									<tr>
										<th>Sipariş</th>
										<th>Sipariş Durumu</th>
										<th>Müşteri</th>
										<th>Sipariş Tarihi</th>
										<th>Göster</th>
									</tr>
								</thead>
								<tbody style="font-size:15px">
									@foreach (var item in Model.SonSiparis)
									{
										<tr>
											<td>@item.SiparisId</td>
											@switch (item.SiparisDurumu)
											{
												case 1:
													<td>İşleniyor</td>
													break;
												case 2:
													<td>Hazırlanıyor</td>
													break;

												case 3:
													<td>İptal</td>
													break;

												case 4:
													<td>Kargoya Verildi</td>
													break;

												case 5:
													<td>Teslim Edildi</td>
													break;


												default:
													<td>Hata</td>
													break;

											}
											<td>
												@item.Musteri
											</td>
											<td>
												@item.SiparisTarihi
											</td>
											<td>
												<a class="btn btn-info btn-sm" href="#">
													<i class="fa fa-eye"></i>
													Göster
												</a>
											</td>
										</tr>

									}


								</tbody>
							</table>
						</div>
						<!-- /.card-body -->
					</div>
				</div>
				<!-- /.card -->
				<div class="col-md-5">
					<div class="card">
						<div class="card-header">
							<h3 class="card-title"><i class="fa fa-search"></i>  Popüler Arama Anahtar Kelimeleri</h3>

							<div class="card-tools">
								<button type="button" class="btn btn-tool" data-card-widget="collapse">
									<i class="fas fa-minus"></i>
								</button>
								<button type="button" class="btn btn-tool" data-card-widget="remove">
									<i class="fas fa-times"></i>
								</button>
							</div>
						</div>
						<!-- /.card-header -->
						<div class="card-body p-0">
							<table class="table table-striped">
								<thead>
									<tr>
										<th class="col-6">Kelime</th>
										<th class="col-6">Aratılan Miktar</th>
									</tr>
								</thead>
								<tbody>
									@foreach (var item in Model.PopulerAramaAnahtarKelimeleri)
									{
										<tr>
											<td>@item.AnahtarKelime</td>
											<td>@item.AratılanMiktar</td>
										</tr>

									}

								</tbody>
							</table>
						</div>
						<!-- /.card-body -->
					</div>
					<!-- /.card -->
				</div>
				<!-- /.col -->
			</div>
			<!--row-->
			<!--/.row-->
			<div class="row">
				<div class="col-md-7">
					<div class="card">
						<div class="card-header">
							<h3 class="card-title"><i class="nav-icon fas fa-chart-pie"></i>   Sipariş Toplamları</h3>
							<div class="card-tools">
								<button type="button" class="btn btn-tool" data-card-widget="collapse">
									<i class="fas fa-minus"></i>
								</button>
								<button type="button" class="btn btn-tool" data-card-widget="remove">
									<i class="fas fa-times"></i>
								</button>
							</div>
						</div>
						<!-- /.card-header -->
						<div class="card-body p-0">
							<table class="table table-striped">
								<thead>
									<tr>
										<th>Durumu</th>
										<th>Bugün</th>
										<th>Bu Hafta</th>
										<th>Bu Ay</th>
										<th>Tüm Zamanlar</th>
									</tr>
								</thead>
								<tbody style="font-size:15px">

									<tr>
										<td>İşleniyor</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisTarihleri>=DateTime.Now.AddDays(-1)&& x.SiparisTarihleri<DateTime.Now).Where(x=>x.SiparisDurumu=="İşleniyor").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisTarihleri>=DateTime.Now.AddDays(-7)&& x.SiparisTarihleri<DateTime.Now).Where(x=>x.SiparisDurumu=="İşleniyor").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisTarihleri>=DateTime.Now.AddDays(-30)&& x.SiparisTarihleri<DateTime.Now).Where(x=>x.SiparisDurumu=="İşleniyor").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisDurumu=="İşleniyor").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
									</tr>



									<tr>
										<td>Hazırlanıyor</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisTarihleri>=DateTime.Now.AddDays(-1)&& x.SiparisTarihleri<DateTime.Now).Where(x=>x.SiparisDurumu=="Hazırlanıyor").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisTarihleri>=DateTime.Now.AddDays(-7)&& x.SiparisTarihleri<DateTime.Now).Where(x=>x.SiparisDurumu=="Hazırlanıyor").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisTarihleri>=DateTime.Now.AddDays(-30)&& x.SiparisTarihleri<DateTime.Now).Where(x=>x.SiparisDurumu=="Hazırlanıyor").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisDurumu=="Hazırlanıyor").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
									</tr>
									<tr>
										<td>İptal</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisTarihleri>=DateTime.Now.AddDays(-1)&& x.SiparisTarihleri<DateTime.Now).Where(x=>x.SiparisDurumu=="İptal").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisTarihleri>=DateTime.Now.AddDays(-7)&& x.SiparisTarihleri<DateTime.Now).Where(x=>x.SiparisDurumu=="İptal").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisTarihleri>=DateTime.Now.AddDays(-30)&& x.SiparisTarihleri<DateTime.Now).Where(x=>x.SiparisDurumu=="İptal").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisDurumu=="İptal").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
									</tr>
									<tr>
										<td>Kargoya Verildi</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisTarihleri>=DateTime.Now.AddDays(-1)&& x.SiparisTarihleri<DateTime.Now).Where(x=>x.SiparisDurumu=="Kargoya Verildi").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisTarihleri>=DateTime.Now.AddDays(-7)&& x.SiparisTarihleri<DateTime.Now).Where(x=>x.SiparisDurumu=="Kargoya Verildi").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisTarihleri>=DateTime.Now.AddDays(-30)&& x.SiparisTarihleri<DateTime.Now).Where(x=>x.SiparisDurumu=="Kargoya Verildi").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisDurumu=="Kargoya Verildi").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
									</tr>
									<tr>
										<td>Teslim Edildi</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisTarihleri>=DateTime.Now.AddDays(-1)&& x.SiparisTarihleri<DateTime.Now).Where(x=>x.SiparisDurumu=="Teslim Edildi").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisTarihleri>=DateTime.Now.AddDays(-7)&& x.SiparisTarihleri<DateTime.Now).Where(x=>x.SiparisDurumu=="Teslim Edildi").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisTarihleri>=DateTime.Now.AddDays(-30)&& x.SiparisTarihleri<DateTime.Now).Where(x=>x.SiparisDurumu=="Teslim Edildi").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
										<td>
											@Model.SiparisToplamları.Where(x=>x.SiparisDurumu=="Teslim Edildi").Select(x=>x.HesaplananTutar).Sum().ToString().TrimEnd('0') TL
										</td>
									</tr>

								</tbody>
							</table>
						</div>
						<!-- /.card-body -->
					</div>
				</div>
				<!-- /.card -->
				<div class="col-md-5">
					<div class="card">
						<div class="card-header">
							<h3 class="card-title"><i class="fa fa-hourglass-start"></i>   Ödeme Durumları Toplam</h3>
							<div class="card-tools">
								<button type="button" class="btn btn-tool" data-card-widget="collapse">
									<i class="fas fa-minus"></i>
								</button>
								<button type="button" class="btn btn-tool" data-card-widget="remove">
									<i class="fas fa-times"></i>
								</button>
							</div>
						</div>
						<!-- /.card-header -->
						<div class="card-body p-0">
							<table class="table table-striped">
								<thead>
									<tr>
										<th>Durum</th>
										<th>Toplam</th>
										<th>Göster</th>
									</tr>
								</thead>
								<tbody>
									@foreach (var item in Model.SiparisDurumunaGore)
									{
										<tr>
											<td>@item.OdemeDurumu.ToString().TrimEnd('0')</td>
											<td>@item.TotalRakam.ToString().TrimEnd('0') TL</td>
											<td>
												<a class="btn btn-info btn-sm" href="#">
													<i class="fa fa-eye"></i>
													Göster
												</a>
											</td>
										</tr>
									}
								</tbody>
							</table>
						</div>
						<!-- /.card-body -->
					</div>
					<!-- /.card -->
				</div>
				<!-- /.col -->
			</div>
			<!--row-->
			<!--row-->
			<div class="row">
				<div class="col-md-6">
					<div class="card">
						<div class="card-header">
							<h3 class="card-title"><i class="fa fa-star"></i>   Miktara Göre En Çok Satılanlar</h3>
							<div class="card-tools">
								<button type="button" class="btn btn-tool" data-card-widget="collapse">
									<i class="fas fa-minus"></i>
								</button>
								<button type="button" class="btn btn-tool" data-card-widget="remove">
									<i class="fas fa-times"></i>
								</button>
							</div>
						</div>
						<!-- /.card-header -->
						<div class="card-body p-0">
							<table class="table table-striped">
								<thead>
									<tr>
										<th>Ürün Adı</th>
										<th>Toplam Miktar</th>
										<th style="width:25%">Toplam Tutar <br />(Vergi Hariç)</th>
										<th>Göster</th>
									</tr>
								</thead>
								<tbody style="font-size:15px">
									@foreach (var item in Model.MiktaraGoreCokSatanlar)
									{
										<tr>
											<td>@item.UrunAdi</td>
											<td>@item.Miktar</td>
											<td>
												@item.TotalFiyat
											</td>
											<td>
												<a class="btn btn-info btn-sm" href="#">
													<i class="fa fa-eye"></i>
													Göster
												</a>
											</td>
										</tr>
									}


								</tbody>
							</table>
						</div>
						<!-- /.card-body -->
					</div>
				</div>
				<!-- /.card -->
				<div class="col-md-6">
					<div class="card">
						<div class="card-header">
							<h3 class="card-title"><i class="fa fa-star"></i>   Tutarına Göre En Çok Satılanlar</h3>
							<div class="card-tools">
								<button type="button" class="btn btn-tool" data-card-widget="collapse">
									<i class="fas fa-minus"></i>
								</button>
								<button type="button" class="btn btn-tool" data-card-widget="remove">
									<i class="fas fa-times"></i>
								</button>
							</div>
						</div>
						<!-- /.card-header -->
						<div class="card-body p-0">
							<table class="table table-striped">
								<thead>
									<tr>
										<th>Ürün Adı</th>
										<th>Toplam Miktar</th>
										<th style="width:25%">Toplam Tutar <br />(Vergi Hariç)</th>
										<th>Göster</th>
									</tr>
								</thead>
								<tbody style="font-size:15px">
									@foreach (var item in Model.TutarinaGoreCokSatanlar)
									{
										<tr>
											<td>@item.UrunAdi</td>
											<td>@item.Miktar</td>
											<td>@item.TotalFiyat</td>
											<td>
												<a class="btn btn-info btn-sm" href="#">
													<i class="fa fa-eye"></i>
													Göster
												</a>
											</td>
										</tr>

									}

								</tbody>
							</table>
						</div>
						<!-- /.card-body -->
					</div>
				</div>
				<!-- /.card -->
			</div>
		</div><!-- /.container-fluid -->
	</section>
	<!-- /.content -->
</div>
<!-- /.content-wrapper -->
@section Scripts{
	<!-- jQuery -->
	<script src="~/plugins/jquery/jquery.min.js"></script>
	<!-- Bootstrap 4 -->
	<script src="~/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
	<!-- AdminLTE App -->
	<script src="~/dist/js/adminlte.min.js"></script>
	<!-- FLOT CHARTS -->
	<script src="~/plugins/flot/jquery.flot.js"></script>
	<!-- FLOT RESIZE PLUGIN - allows the chart to redraw when the window is resized -->
	<script src="~/plugins/flot/plugins/jquery.flot.resize.js"></script>
	<!-- FLOT PIE PLUGIN - also used to draw donut charts -->
	<script src="~/plugins/flot/plugins/jquery.flot.pie.js"></script>
	<!-- AdminLTE for demo purposes -->
	<script src="~/dist/js/demo.js"></script>
	<!-- Page specific script -->
	<!-- ChartJS -->
	<script src="~/plugins/chart.js/Chart.min.js"></script>

	<script>
		$(function () {
			/* ChartJS
			 * -------
			 * Here we will create a few charts using ChartJS
			 */

			//--------------
			//- AREA CHART -
			//--------------

			// Get context with jQuery - using jQuery's .get() method.
			var areaChartCanvas = $('#areaChart').get(0).getContext('2d')

			var areaChartData = {
				labels: ['Pazartesi', 'Salı', 'Çarşamba', 'Perşembe', 'Cuma', 'Cumartesi', 'Pazar'],
				datasets: [
					{
						label: 'Sipariş Sayısı',
						backgroundColor: 'rgba(60,141,188,0.9)',
						borderColor: 'rgba(60,141,188,0.8)',
						pointRadius: true,
						pointColor: '#3b8bba',
						pointStrokeColor: 'rgba(60,141,188,1)',
						pointHighlightFill: '#fff',
						pointHighlightStroke: 'rgba(60,141,188,1)',
						data: [15, 30, 45, 60, 75, 90, 105]
					}
				]
			}


			var areaChartOptions = {
				maintainAspectRatio: false,
				responsive: true,
				legend: {
					display: false
				},
				scales: {
					xAxes: [{
						gridLines: {
							display: false,
						}
					}],
					yAxes: [{
						gridLines: {
							display: false,
						}
					}]
				}
			}

			// This will get the first returned node in the jQuery collection.
			new Chart(areaChartCanvas, {
				type: 'line',
				data: areaChartData,
				options: areaChartOptions
			})
			var areaChartCanvas = $('#areaChartCustomer').get(0).getContext('2d')

			var areaChartData = {
				labels: ['Pazartesi', 'Salı', 'Çarşamba', 'Perşembe', 'Cuma', 'Cumartesi', 'Pazar'],
				datasets: [
					{
						label: 'Müşteri Sayısı',
						backgroundColor: '#3d9970',
						borderColor: '#3d9970',
						pointRadius: true,
						pointColor: '#3b8bba',
						pointStrokeColor: 'rgba(60,141,188,1)',
						pointHighlightFill: '#fff',
						pointHighlightStroke: 'rgba(60,141,188,1)',
						data: [28, 48, 40, 19, 86, 27, 90]
					}

				]
			}

			var areaChartOptions = {
				maintainAspectRatio: false,
				responsive: true,
				legend: {
					display: false
				},
				scales: {
					xAxes: [{
						gridLines: {
							display: false,
						}
					}],
					yAxes: [{
						gridLines: {
							display: false,
						}
					}]
				}
			}
			// This will get the first returned node in the jQuery collection.
			new Chart(areaChartCanvas, {
				type: 'line',
				data: areaChartData,
				options: areaChartOptions
			})
		})
		$(function () {
			/*
			 * Flot Interactive Chart
			 * -----------------------
			 */
			// We use an inline data source in the example, usually data would
			// be fetched from a server
			var data = [],
				totalPoints = 100

			function getRandomData() {

				if (data.length > 0) {
					data = data.slice(1)
				}

				// Do a random walk
				while (data.length < totalPoints) {

					var prev = data.length > 0 ? data[data.length - 1] : 50,
						y = prev + Math.random() * 10 - 5

					if (y < 0) {
						y = 0
					} else if (y > 100) {
						y = 100
					}

					data.push(y)
				}

				// Zip the generated y values with the x values
				var res = []
				for (var i = 0; i < data.length; ++i) {
					res.push([i, data[i]])
				}

				return res
			}

			var interactive_plot = $.plot('#interactive', [
				{
					data: getRandomData(),
				}
			],
				{
					grid: {
						borderColor: '#f3f3f3',
						borderWidth: 1,
						tickColor: '#f3f3f3'
					},
					series: {
						color: '#3c8dbc',
						lines: {
							lineWidth: 2,
							show: true,
							fill: true,
						},
					},
					yaxis: {
						min: 0,
						max: 100,
						show: true
					},
					xaxis: {
						show: true
					}
				}
			)

			var updateInterval = 500 //Fetch data ever x milliseconds
			var realtime = 'on' //If == to on then fetch data every x seconds. else stop fetching
			function update() {

				interactive_plot.setData([getRandomData()])

				// Since the axes don't change, we don't need to call plot.setupGrid()
				interactive_plot.draw()
				if (realtime === 'on') {
					setTimeout(update, updateInterval)
				}
			}

			//INITIALIZE REALTIME DATA FETCHING
			if (realtime === 'on') {
				update()
			}
			//REALTIME TOGGLE
			$('#realtime .btn').click(function () {
				if ($(this).data('toggle') === 'on') {
					realtime = 'on'
				}
				else {
					realtime = 'off'
				}
				update()
			})
			/*
			 * END INTERACTIVE CHART
			 */
		})


	</script>


}
